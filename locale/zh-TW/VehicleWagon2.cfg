[vehicle-wagon2]
data-error=錯誤：找不到貨車 #__1__ 的資料。換成空車。
empty-wagon-busy-error=這輛馬車已經被裝載了！
empty-wagon-error=錯誤：沒有空間來建立空貨車。 __ENTITY__vehicle-wagon__ 物品灑在地上。
item-inserted=+__1__ __2__
load-locked-vehicle-error=錯誤：無法載入 __1__，因為 __2__ 已將其鎖定。
load-owned-vehicle-error=錯誤：無法載入 __1__，它屬於 __2__。
loaded-wagon-busy-error=這輛馬車已經卸貨了！
loaded-wagon-error=錯誤：沒有空間來建立裝載的貨車。 __ENTITY__vehicle-wagon__ 物品灑在地上。
location-too-close-error=錯誤：所選位置太靠近 __1__。
location-too-far-away-error=錯誤：所選位置距離 __1__ 太遠。
migrate-12x-success=Vehicle Wagon 2 從 1.2.x 版本成功遷移資料。
migrate-prototype-error=遷移錯誤：刪除貨車#__1__ 的內容，因為車輛原型“__2__”不存在。
migrate-prototype-warning=警告：如果任何已刪除的車輛被其他模組重新命名，請聯絡 Vehicle Wagon 2 模組作者。
migrate-vehicle-success=載有 __2__ 的貨車 #__1__ 的遷移資料。
migrate-wagon-error=遷移錯誤：刪除“__2__”上的資料，因為找不到貨車 #__1__。
no-vehicle-selected=未選擇車輛。
select-unload-vehicle-location=已選擇裝載的貨車！現在單擊您要解除安裝 __1__ 的位置。
train-in-motion-error=錯誤：火車在行駛時無法裝卸。
train-in-space-error=錯誤：__1__ 在太空中時無法解除安裝。
unknown-vehicle-error=錯誤：不支援載入 __1__。
unload-locked-vehicle-error=錯誤：無法解除安裝 __1__，因為 __2__ 已將其鎖定。
unload-owned-vehicle-error=錯誤：無法解除安裝 __1__，它屬於 __2__。
vehicle-in-motion-error=錯誤：移動時無法裝載車輛。
vehicle-in-space-error=錯誤：在太空中無法載入 __1__。
vehicle-invalid-error=錯誤：所選車輛不再有效。請再試一次。
vehicle-not-created-error=錯誤：沒有空間可以解除安裝 __1__。
vehicle-passenger-error=錯誤：無法裝載內部有玩家的車輛。
vehicle-prototype-error=錯誤：無法解除安裝貨車 #__1__，因為車輛原型“__2__”不存在。
vehicle-selected=__1__ 已選中！現在單擊附近的 __ENTITY__vehicle-wagon__。
wagon-destroyed=__ENTITY__vehicle-wagon__ __1__被毀！你失去了你的__2__。
wagon-invalid-error=錯誤：所選貨車不再有效。請再試一次。
wagon-passenger-error=錯誤：無法解除安裝裡面有玩家的貨車。
wagon-too-far-away-error=錯誤：選擇的 __ENTITY__vehicle-wagon__ 離 __1__ 太遠。
too-many-selected-error=錯誤：使用 __ITEM__winch__ 選擇的車輛或貨車太多。

[item-name]
winch=絞盤

[item-description]
winch=按住 __ITEM__winch__ 的同時，單擊車輛，然後單擊附近的 __ENTITY__vehicle-wagon__ 將車輛裝載到貨車上。

[entity-name]
vehicle-wagon=車廂
loaded-vehicle-wagon-car=__ENTITY__vehicle-wagon__ (__ENTITY__car__)
loaded-vehicle-wagon-cargoplane=__ENTITY__vehicle-wagon__ (__ENTITY__cargo-plane__)
loaded-vehicle-wagon-gunship=__ENTITY__vehicle-wagon__ (__ENTITY__gunship__)
loaded-vehicle-wagon-jet=__ENTITY__vehicle-wagon__ (__ENTITY__jet__)
loaded-vehicle-wagon-tank=__ENTITY__vehicle-wagon__ (__ENTITY__tank__)
loaded-vehicle-wagon-tarp=__ENTITY__vehicle-wagon__（其他）
loaded-vehicle-wagon-truck=__ENTITY__vehicle-wagon__ (__ENTITY__dumper-truck__)
loaded-vehicle-wagon-tank-L=__ENTITY__vehicle-wagon__ (__ENTITY__Schall-tank-L__)
loaded-vehicle-wagon-tank-H=__ENTITY__vehicle-wagon__ (__ENTITY__Schall-tank-H__)
loaded-vehicle-wagon-tank-SH=__ENTITY__vehicle-wagon__ (__ENTITY__Schall-tank-SH__)
loaded-vehicle-wagon-kr-advanced-tank=__ENTITY__vehicle-wagon__ (__ENTITY__kr-advanced-tank__)

[entity-description]
loaded-vehicle-wagon-car=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__car__。
loaded-vehicle-wagon-cargoplane=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__cargo-plane__。
loaded-vehicle-wagon-gunship=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__gunship__。
loaded-vehicle-wagon-jet=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__jet__。
loaded-vehicle-wagon-tank=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__tank__。
loaded-vehicle-wagon-tarp=使用 __ITEM__winch__ 從這輛貨車上卸下車輛。
loaded-vehicle-wagon-truck=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__dumper-truck__。
loaded-vehicle-wagon-tank-L=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__Schall-tank-L__。
loaded-vehicle-wagon-tank-H=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__Schall-tank-H__。
loaded-vehicle-wagon-tank-SH=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__Schall-tank-SH__。
loaded-vehicle-wagon-kr-advanced-tank=使用 __ITEM__winch__ 從這輛貨車上卸下 __ENTITY__kr-advanced-tank__。
vehicle-wagon=使用 __ITEM__winch__ 將車輛裝載到這輛平板貨車上，並在您的鐵路旅行中隨身攜帶。

[technology-name]
vehicle-wagons=車輛貨車

[technology-description]
vehicle-wagons=__ENTITY__vehicle-wagon__ 允許您在火車上攜帶裝備和裝載的車輛，因此它們可以在抵達後立即部署。

[mod-description]
##VehicleWagon2=使用 __ITEM__winch__ 將您裝備齊全且滿載的戰鬥或運輸車輛拖到平板火車車廂上，並在您的鐵路之旅中隨身攜帶！

[mod-setting-name]
vehicle-wagon-allow-robot-unloading=允許機器人解除安裝 __ENTITY__vehicle-wagon__s
vehicle-wagon-use-custom-weights=使用自定義貨車重量和力量
vehicle-wagon-maximum-weight=最大 __ENTITY__vehicle-wagon__ 負載能力
vehicle-wagon-empty-weight-factor=空車重量係數
vehicle-wagon-vehicle-weight-factor=裝載車輛重量係數
vehicle-wagon-braking-factor=__ENTITY__vehicle-wagon__ 制動力系數
vehicle-wagon-empty-friction-factor=空車摩擦係數
vehicle-wagon-loaded-friction-factor=載貨貨車摩擦係數
vehicle-wagon-use-GCKI-permissions=尊重 Gizmo 的車鑰匙（如果已安裝）的車輛許可權
vehicle-wagon-compatibility-entities=包括所有裝載的貨車實體

[mod-setting-description]
vehicle-wagon-allow-robot-unloading=選中時，拆解裝載貨車的機器人將首先嚐試解除安裝車輛。\n未選中時，機器人將始終將車輛及其內容物帶到物流網路。
vehicle-wagon-use-custom-weights=選中後，__ENTITY__vehicle-wagon__ 的重量、制動力和摩擦力是根據 __ENTITY__cargo-wagon__ 及其攜帶的車輛使用以下乘數計算得出的。
vehicle-wagon-maximum-weight=__ENTITY__vehicle-wagon__ 上可裝載的最重車輛的重量。
vehicle-wagon-empty-weight-factor=相對於 __ENTITY__cargo-wagon__ 的空車重量。
vehicle-wagon-vehicle-weight-factor=車輛重量的一部分新增到裝載的貨車上。
vehicle-wagon-braking-factor=__ENTITY__vehicle-wagon__ 相對於 __ENTITY__cargo-wagon__ 的制動力。
vehicle-wagon-empty-friction-factor=空車相對於 __ENTITY__cargo-wagon__ 的摩擦力。
vehicle-wagon-loaded-friction-factor=裝載貨車相對於 __ENTITY__cargo-wagon__ 的摩擦力。
vehicle-wagon-use-GCKI-permissions=選中後，如果其他人已使用 __ITEM__car-key__ 鎖定或認領車輛，您將無法裝載或解除安裝車輛。
vehicle-wagon-compatibility-entities=選中後，所有裝載的貨車型別都包含在遊戲中，即使它們對應的模組不存在。如果您將車輛裝載到旅行車上，則使用它來遷移儲存檔案，然後刪除新增該車輛的 mod。

[command-help]
vehicle-wagon-debug=用法：/vehicle-wagon-debug [dump|dumplog]\ndump：將全域性資料表寫入控制檯。\ndumplog：將全域性資料表寫入factorio_current.log。
